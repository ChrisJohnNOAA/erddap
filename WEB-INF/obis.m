% Example script to get data into Matlab from any % DiGIR data source (http://digir.sourceforge.net/) % which uses the Darwin2 schema % (http://digir.sourceforge.net/schema/conceptual/darwin/2003/1.0/darwin2.xsd)% or OBIS schema (http://www.iobis.org/tech/provider/questions).% Bob Simons (bob.simons@noaa.gov)% Last modified 2007-05-17b% (Adapted from caron.m from Rich Signell  rsignell@usgs.gov )%% Copyright 2007, NOAA.% Permission to use, copy, modify, and distribute this software and% its documentation for any purpose and without fee is hereby granted,% provided that the above copyright notice appear in all copies, that% both the copyright notice and this permission notice appear in% supporting documentation, and that redistributions of modified forms% of the source or binary code carry prominent notices stating that the% original code was changed and the date of the change.  This software% is provided "as is" without express or implied warranty.% % DISCLAIMER OF LIABILITY% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR % IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, % FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE % AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER % LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, % OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE % SOFTWARE.% Download and install the ErdJava.zip file from%   http://coastwatch.pfel.noaa.gov/coastwatch/NetCheck.html/% For the following examples, I'll assume the ErdJava.zip file is unzipped %   into /Applications/ErdJava.% For Matlab 7+:javaaddpath('/Applications/ErdJava/lib/commons-codec-1.3.jar','-end');javaaddpath('/Applications/ErdJava/lib/commons-httpclient-3.0.1.jar','-end');javaaddpath('/Applications/ErdJava/lib/commons-logging-1.1.jar','-end');javaaddpath('/Applications/ErdJava/lib/netcdf-latest.jar','-end');javaaddpath('/Applications/ErdJava/lib/slf4j-jdk14.jar','-end');javaaddpath('/Applications/ErdJava/classes','-end');% For Matlab 6 or 6.5:%  1. "edit classpath.txt" and add the following lines to the list%     /Applications/ErdJava/lib/commons-codec-1.3.jar%     /Applications/ErdJava/lib/commons-httpclient-3.0.1.jar%     /Applications/ErdJava/lib/commons-logging-1.1.jar%     /Applications/ErdJava/lib/netcdf-latest.jar%     /Applications/ErdJava/lib/slf4j-jdk14.jar%     /Applications/ErdJava/classes%  2.  Restart Matlab% NOTE: For all versions of Matlab, edit "classpath.txt" and remove % (or comment) the line that contains%  "mwucarunits.jar" and restart MATLAB.  The "mwucarunits.jar" file is only% used by the Mathworks "Model-Based Calibration Toolbox" and contains an % old implementation of the Unidata udunits package that conflicts with% the more recent version that NetCDF-Java uses.% import the classes and methods we need for this exampleimport gov.noaa.pfel.coastwatch.pointdata.DigirHelperimport gov.noaa.pfel.coastwatch.pointdata.Table% create a Table objecttable = Table();% Read the data into the table via%    public static void searchObisOpendapStyle(String resources[], String url,  %        String query, Table table);%  % @param resources These must be resources supported by the DiGIR provider, e.g., {'GHMP', ''}.%    You can find resources available from a given provider by going to the %    url in your browser (to get the metadata xml) and looking for all the <code> tags.% @param url the url of the provider, usually ending in "DiGIR.php", %    e.g., see DigirHelper.RUTGERS_OBIS_URL.%    A list of Digir providers is at http://bigdig.ecoforge.net/wiki/SchemaStatus .% @param query is the opendap-style query, e.g.,%    'var1,var2,var3&var4=value4&var5>=value5' .%    A more specific example is %    'darwin:Genus,darwin:Species&darwin:Genus=Macrocystis&darwin:Latitude>=53&darwin:Latitude<=54' .%    Note that each constraint's left hand side must be a variable%      and its right hand side must be a value.%    The valid string variable operators are '=', '!=', '~='.%    The valid numeric variable operators are '=', '!=', '<', '<=', '>', '>=').%    '~=' (which would normally match a regular expression on the right hand side)%      is translated to 'like'.%    'like' supports '%' (a wildcard) at the beginning and/or end of the value.%    Although you can put constraints on any variable, most variables have %      little or no data, so extensive requests will generate few or no results rows.%    Darwin2-compatible sites support these variables:%        darwin:DateLastModified = dateTime; comment=ISO 8601 compliant stamp indicating the date and time in UTC(GMT) when the record was last modified. Example: the instant 'November 5, 1994, 8:15:30 am, US Eastern Standard Time' would be represented as '1994-11-05T13:15:30Z' (see http://www.w3.org/TR/NOTE-datetime , W3C Note on Date and Time Formats</a>). (What to do when this date-time is unknown? Use Date-Time first 'published'?)%        darwin:InstitutionCode = String; comment=A 'standard' code identifier that identifies the institution to which the collection belongs. No global registry exists for assigning institutional codes. Use the code that is 'standard' in your discipline.%        darwin:CollectionCode = String; comment=A unique alphanumeric value which identifies the collection within the institution%        darwin:CatalogNumber = String; comment=A unique alphanumeric value which identifies an individual record within the collection. It is recommended that this value provides a key by which the actual specimen can be identified. If the specimen has several items such as various types of preparation, this value should identify the individual component of the specimen%        darwin:ScientificName = String; comment=The full name of lowest level taxon the Cataloged Item can be identified as a member of; includes genus name, specific epithet, and subspecific epithet (zool.) or infraspecific rank abbreviation, and infraspecific epithet (bot.) Use name of suprageneric taxon (e.g., family name) if Cataloged Item cannot be identified to genus, species, or infraspecific taxon.%        darwin:BasisOfRecord = String; comment=An abbreviation indicating whether the record represents an observation (O), living organism (L), specimen (S), germplasm/seed (G), etc.%        darwin:Kingdom = String; comment=The kingdom to which the organism belongs%        darwin:Phylum = String; comment=The phylum (or division) to which the organism belongs%        darwin:Class = String; comment=The class name of the organism%        darwin:Order = String; comment=The order name of the organism%        darwin:Family = String; comment=The family name of the organism%        darwin:Genus = String; comment=The genus name of the organism%        darwin:Species = String; comment=The specific epithet of the organism%        darwin:Subspecies = String; comment=The sub-specific epithet of the organism%        darwin:ScientificNameAuthor = String; comment=The author of a scientific name. Author string as applied to the accepted name. Can be more than one author (concatenated string). Should be formatted according to the conventions of the applicable taxonomic discipline.%        darwin:IdentifiedBy = String; comment=The name(s) of the person(s) who applied the currently accepted Scientific Name to the Cataloged Item.%        darwin:YearIdentified = short; comment=The year portion of the date when the Collection Item was identified; as four digits [-9999..9999], e.g., 1906, 2002.%        darwin:MonthIdentified = byte; comment=The month portion of the date when the Collection Item was identified; as two digits [01..12].%        darwin:DayIdentified = byte; comment=The day portion of the date when the Collection Item was identified; as two digits [01..31].%        darwin:TypeStatus = String; comment=Indicates the kind of nomenclatural type that a specimen represents. (This is incomplete because type status actually describes the relationship between a name and a specimen [or ternary relatiohnship between a specimen, name, and publication].) In particular, the type status may not apply to the name listed in the scientific name, i.e., current identification. In rare cases, a single specimen may be the type of more than one name.%        darwin:CollectorNumber = String; comment=An identifying 'number' (really a string) applied to specimens (in some disciplines) at the time of collection. Establishes a links different parts/preparations of a single specimen and between field notes and the specimen.%        darwin:FieldNumber = String; comment=A 'number' (really a string) created at collection time to identify all material that resulted from a collecting event.%        darwin:Collector = String; comment=The name(s) of the collector(s) responsible for collection the specimen or taking the observation%        darwin:YearCollected = short; comment=The year (expressed as an integer) in which the specimen was collected. The full year should be expressed (e.g. 1972 must be expressed as '1972' not '72'). Must always be a four digit integer [-9999..9999]%        darwin:MonthCollected = byte; comment=The month of year the specimen was collected from the field. Possible values range from 01...12 inclusive%        darwin:DayCollected = byte; comment=The day of the month the specimen was collected from the field. Possible value ranges from 01..31 inclusive%        darwin:JulianDay = short; comment=The ordinal day of the year; i.e., the number of days since January 1 of the same year. (January 1 is Julian Day 1.)%        darwin:TimeOfDay = double; units=hours; comment=The time of day a specimen was collected expressed as decimal hours from midnight local time (e.g. 12.0 = mid day, 13.5 = 1:30pm)%        darwin:ContinentOcean = String; comment=The continent or ocean from which a specimen was collected.%        darwin:Country = String; comment=The country or major political unit from which the specimen was collected. http://www.din.de/gremien/nas/nabd/iso3166ma/codlstp1/db_en.html , ISO 3166-1 values should be used. Full country names are currently in use. A future recommendation is to use ISO3166-1 two letter codes or the full name when searching%        darwin:StateProvince = String; comment=The state, province or region (i.e. next political region smaller than Country) from which the specimen was collected. There is some suggestion to use the values described in http://www.iso.ch/cate/d8349.html , ISO 3166-2, however these values are in a continual state of flux and it appears unlikely that an appropriate mechanism (by ISO) will be in place to manage these changes. Hence it is recommended that where possible, the full, unabbreviated name should be used for storing information. The server should optionally handle abbreviations as an access point. Note: this is a recurring theme (country and state) abbreviations. Check the existence of an attribute type to deal with abbreviations from the bib-1 profile%        darwin:County = String; comment=The county (or shire, or next political region smaller than State / Province) from which the specimen was collected%        darwin:Locality = String; comment=The locality description (place name plus optionally a displacement from the place name) from which the specimen was collected. Where a displacement from a location is provided, it should be in un-projected units of measurement%        darwin:Longitude = double; units=degrees_east; comment=The longitude of the location from which the specimen was collected. This value should be expressed in decimal degrees with a datum such as WGS-84%        darwin:Latitude = double; units=degrees_north; comment=The latitude of the location from which the specimen was collected. This value should be expressed in decimal degrees with a datum such as WGS-84%        darwin:CoordinatePrecision = double; units=m; comment=An estimate of how tightly the collecting locality was specified; expressed as a distance, in meters, that corresponds to a radius around the latitude-longitude coordinates. Use NULL where precision is unknown, cannot be estimated, or is not applicable.%        darwin:BoundingBox = String; comment=This access point provides a mechanism for performing searches using a bounding box. A Bounding Box element is not typically present in the database, but rather is derived from the Latitude and Longitude columns by the data provider%        darwin:MinimumElevation = double; units=m; comment=The minimum distance in meters above (positive) or below sea level of the collecting locality.%        darwin:MaximumElevation = double; units=m; comment=The maximum distance in meters above (positive) or below sea level of the collecting locality.%        darwin:MinimumDepth = double; units=m; comment=The minimum distance in meters below the surface of the water at which the collection was made; all material collected was at least this deep. Positive below the surface, negative above (e.g. collecting above sea level in tidal areas).%        darwin:MaximumDepth = double; units=m; comment=The maximum distance in meters below the surface of the water at which the collection was made; all material collected was at most this deep. Positive below the surface, negative above (e.g. collecting above sea level in tidal areas).%        darwin:Sex = String; comment=The sex of a specimen. The domain should be a controlled set of terms (codes) based on community consensus. Proposed values: M=Male; F=Female; H=Hermaphrodite; I=Indeterminate (examined but could not be determined; U=Unkown (not examined); T=Transitional (between sexes; useful for sequential hermaphrodites)%        darwin:PreparationType = String; comment=The type of preparation (skin. slide, etc). Probably best to add this as a record element rather than access point. Should be a list of preparations for a single collection record.%        darwin:IndividualCount = int; units=count; comment=The number of individuals present in the lot or container. Not an estimate of abundance or density at the collecting locality.%        darwin:PreviousCatalogNumber = String; comment=The previous (fully qualified) catalog number of the Cataloged Item if the item earlier identified by another Catalog Number, either in the current catalog or another Institution / catalog. A fully qualified Catalog Number is preceded by Institution Code and Collection Code, with a space separating the each subelement. Referencing a previous Catalog Number does not imply that a record for the referenced item is or is not present in the corresponding catalog, or even that the referenced catalog still exists. This access point is intended to provide a way to retrieve this record by previously used identifier, which may used in the literature. In future versions of this schema this attribute should be set-valued.%        darwin:RelationshipType = String; comment=A named or coded valued that identifies the kind relationship between this Collection Item and the referenced Collection Item. Named values include: 'parasite of', 'epiphyte on', 'progeny of', etc. In future versions of this schema this attribute should be set-valued.%        darwin:RelatedCatalogItem = String; comment=The fully qualified identifier of a related Catalog Item (a reference to another specimen); Institution Code, Collection Code, and Catalog Number of the related Cataloged Item, where a space separates the three subelements.%        darwin:Notes = String; comment=Free text notes attached to the specimen record%    OBIS-compatible sites support the Darwin2 variables and:%        obis:RecordURL = String; comment=Gives the web address of the page where more information on this particular record (not on the whole dataset) can be found.%        obis:Source = String; comment=Indicates who gave the record to the data provider. Can indicate a literature citation, an electronic dataset, etc. Is used to provide credit.%        obis:Citation = String; comment=Indicates how this record should be attributed if used%        obis:Subgenus = String; comment=The subgenus name of the organism%        obis:StartYearCollected = short; comment=For samples/observations/record events that were taken over time this gives the start year of the collecting event.  The full year should be expressed (e.g. 1972 must be expressed as '1972' not '72'). Must always be a four digit integer%        obis:EndYearCollected = short; comment=For samples/observations/record events that were taken over time this gives the end year of the collecting event.  The full year should be expressed (e.g. 1972 must be expressed as '1972' not '72'). Must always be a four digit integer%        obis:StartMonthCollected = byte; comment=For samples/observations/record events that were taken over time this gives the start month of the collecting event.  Possible values range from 01...12 inclusive%        obis:EndMonthCollected = byte; comment=For samples/observations/record events that were taken over time this gives the end month of the collecting event.  Possible values range from 01...12 inclusive%        obis:StartDayCollected = byte; comment=For samples/observations/record events that were taken over time this gives the start day of the collecting event.  Possible value ranges from 01..31 inclusive%        obis:EndDayCollected = byte; comment=For samples/observations/record events that were taken over time this gives the end day of the collecting event.  Possible value ranges from 01..31 inclusive%        obis:StartJulianDay = short; comment=For samples/observations/record events that were taken over time this gives the start ordinal day of the year for the collecting event; i.e., the number of days since January 1 of the same year. (January 1 is Julian Day 1.). Should be an integer from one to 365, i.e. of the form (([0-3][0-9][0-9)|([0-9][0-9)|([1-9])).%        obis:EndJulianDay = short; comment=For samples/observations/record events that were taken over time this gives the end ordinal day of the year for the collecting event; i.e., the number of days since January 1 of the same year. (January 1 is Julian Day 1.).  Should be an integer from one to 365, i.e. of the form (([0-3][0-9][0-9)|([0-9][0-9)|([1-9])).%        obis:StartTimeofDay = double; units=hours; comment=For samples/observations/record events that were taken over time this gives the start time of day of the collecting event expressed as decimal hours from midnight local time (e.g. 12.0 = mid day, 13.5 = 1:30pm)%        obis:EndTimeofDay = double; units=hours; comment=For samples/observations/record events that were taken over time this gives the end time of day of the collecting event expressed as decimal hours from midnight local time (e.g. 12.0 = mid day, 13.5 = 1:30pm)%        obis:TimeZone = String; comment=Indicates the time zone for the Time of Day measurements%        obis:StartLongitude = double; units=degrees_east; comment=For samples/observations/record events better represented as line features rather than point features (e.g. extended trawls or transects) this indicates the starting longitude location from which the specimen was collected. Express in decimal degrees (East &amp; North = +; West &amp; South = -). GPS-derived data must use the WGS 84 geodetic reference system (http://www.wgs84.com/). [-180 to 180]%        obis:EndLongitude = double; units=degrees_east; comment=For samples/observations/record events better represented as line features rather than point features (e.g. extended trawls or transects) this indicates the starting longitude location from which the specimen was collected. Express in decimal degrees (East &amp; North = +; West &amp; South = -). GPS-derived data must use the WGS 84 geodetic reference system (http://www.wgs84.com/). [-180 to 180]%        obis:StartLatitude = double; units=degrees_north; comment=For samples/observations/record events better represented as line features rather than point features (e.g. extended trawls or transects) this indicates the starting latitude location from which the specimen was collected or in which the sample/observation/record event occurred. This value should be expressed in decimal degrees (East &amp; North = +; West &amp; South = -). GPS-derived data must use the WGS 84 geodetic reference system (http://www.wgs84.com/).%        obis:EndLatitude = double; units=degrees_north; comment=For samples/observations/record events better represented as line features rather than point features (e.g. extended trawls or transects) this indicates the starting latitude location from which the specimen was collected or in which the sample/observation/record event occurred. This value should be expressed in decimal degrees (East &amp; North = +; West &amp; South = -). GPS-derived data must use the WGS 84 geodetic reference system (http://www.wgs84.com/).%        obis:Start_EndCoordinatePrecision = double; units=m; comment=An estimate of how tightly the locality was specified in the Start/End Latitude and Longitude fields; expressed as a distance, in meters, that corresponds to a radius around the latitude-longitude coordinates. Use NULL where precision is unknown, cannot be estimated, or is not applicable.%        obis:DepthRange = String; comment=For data sets that have the depth range expressed in one field (e.g. '150-200 m') it can be entered here as free text.  Separate, numeric Minimum and Maximum Depth fields are the preferred format; the Depth Range option is included for legacy data sets.%        obis:Temperature = double; units=degree_C; comment=The temperature recorded with the collection/record event. Is assumed to be taken at the collection depth. Expressed in degrees Celsius.%        obis:LifeStage = String; comment=Indicates the life stage present. Will require developing a controlled vocabulary. Can include multiple stages for a lot with multiple individuals.%        obis:ObservedIndividualCount = int; units=count; comment=The number of individuals (abundance) found in a collection/record event.%        obis:SampleSize = String; comment=Sample_size: the size of the sample from which the collection/observation was drawn.  It can be a volume (e.g. for a phytoplankton sample), a linear distance (e.g. for a visual transect or net haul), a surface area (e.g. for a benthic core), etc.  This field must also include the units, e.g. 200 mfor a transect, or 0.25 m^2 for a benthic grab (use ^ to denote a superscript).  Note that when multiple collections/observations are reported from the same physical sample, a code identifying the sample can be placed in the Field_Number field to allow all collections/observations from a single sample to be connected.%        obis:ObservedWeight = double; units=kg; comment=The total biomass found in a collection/record event.  Expressed as kg.%        obis:GMLFeature = String; comment=Geographic Markup Language(GML) description of the feature for representing complex shapes such as lines and polygons, per Open GIS Consortium (OGC) standards - http://www.opengis.net/gml/01-029/GML2.html.%    % @param table the results are appended to table (and metadata is updated).%   The first 5 columns in the table are automatically LON, LAT, %   DEPTH (from darwin:MinimumDepth), %   TIME stored as seconds since 1970-01-01 00:00:00 (created from the %     darwin:YearCollected, darwin:MonthCollected, darwin:DayCollected, %     and darwin:TimeOfDay variables), %   and ID (String data) created from %     <darwin:InstitutionCode>:<darwin:CollectionCode>:<darwin:CatalogNumber>%DigirHelper.searchObisOpendapStyle({'GHMP'}, DigirHelper.RUTGERS_OBIS_URL, 'darwin:InstitutionCode,darwin:CollectionCode,darwin:ScientificName,obis:Temperature&darwin:Genus=Macrocystis&darwin:Latitude>53&darwin:Latitude<54&darwin:YearCollected>=1970&darwin:YearCollected<=2100', table);% copy data into Matlab arrays lon=squeeze(table.findColumn('LON').toArray());lat=squeeze(table.findColumn('LAT').toArray());depth=squeeze(table.findColumn('DEPTH').toArray());time=squeeze(table.findColumn('TIME').toArray());temperature=squeeze(table.findColumn('obis:Temperature').toArray());sciname=squeeze(table.findColumn('darwin:ScientificName').toArray());% plot the data with scatter(x,y,size,color)scatter(lon, lat, 50, time)% set the titletitle('Macrocystis Locations')% end-of-file